{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mass",
				"mass_query2mysql\tfunction"
			],
			[
				"file",
				"file_name_hiveql\tstatement"
			],
			[
				"qre",
				"qregStr\tstatement"
			],
			[
				"gene",
				"generate_queries"
			],
			[
				"query_2d_co",
				"query_2d_covariance\tfunction"
			],
			[
				"var",
				"variance_x"
			],
			[
				"resu",
				"result"
			],
			[
				"in",
				"info"
			],
			[
				"mass_query_co",
				"mass_query_covariance\tfunction"
			],
			[
				"prop",
				"proportion_to_show"
			],
			[
				"data_pro",
				"data_proportions_to_plot"
			],
			[
				"data_pr",
				"data_proportion_to_plot"
			],
			[
				"Da",
				"DataSource\tclass"
			],
			[
				"datas",
				"data_source\t(tools.py)"
			],
			[
				"min",
				"min_xvalue"
			],
			[
				"mat",
				"matplotlib_plot_2D_confidence_interval\tfunction"
			],
			[
				"num_of",
				"num_of_plot"
			],
			[
				"tree",
				"app_decision_tree"
			],
			[
				"app",
				"app_linear"
			],
			[
				"da",
				"data"
			],
			[
				"num",
				"num_training_points_model\tstatement"
			],
			[
				"varian",
				"variance_training_points_model\tstatement"
			],
			[
				"vai",
				"variance_training_points_model\tstatement"
			],
			[
				"ave",
				"averageX_training_points_model\tstatement"
			],
			[
				"training",
				"training_data_model"
			],
			[
				"dimen",
				"dimensionX\tstatement"
			],
			[
				"avera",
				"averageX_training_points_model"
			],
			[
				"query",
				"query2mysql\tfunction"
			],
			[
				"hive",
				"hivepassword"
			],
			[
				"dele",
				"deletable.log\t(logs.py)"
			],
			[
				"logg",
				"logger_file"
			],
			[
				"war",
				"warning\t(core.py)"
			],
			[
				"approximate_vari",
				"approximate_variance_y_from_to\tfunction"
			],
			[
				"x",
				"x_min"
			],
			[
				"ex",
				"exact_result\tstatement"
			],
			[
				"time",
				"time_ratio\tfunction"
			],
			[
				"approx",
				"approx_times"
			],
			[
				"appro",
				"approx_results"
			],
			[
				"exa",
				"exact_times"
			],
			[
				"approx_time",
				"approx_times"
			],
			[
				"exac",
				"exact_times"
			],
			[
				"date",
				"datetime"
			],
			[
				"lo",
				"logger\tstatement"
			],
			[
				"try",
				"try\tTry/Except/Finally"
			],
			[
				"rand",
				"randrange\tstatement"
			],
			[
				"Q",
				"Query_Engine_2d"
			],
			[
				"2d",
				"2d_query_engine"
			],
			[
				"allow",
				"b_allow_repeated_value"
			],
			[
				"re",
				"remove_repeated_x_1d\tfunction"
			],
			[
				"to",
				"to_csv\tfunction"
			],
			[
				"l",
				"labels\tstatement"
			],
			[
				"loa",
				"load2d"
			],
			[
				"defa",
				"default_logger_name"
			],
			[
				"qu",
				"query_2d"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"nu",
				"num_training_points\tstatement"
			],
			[
				"set",
				"set_logging\tfunction"
			],
			[
				"plot",
				"plot_training_data_3d\tfunction"
			],
			[
				"training_da",
				"training_data"
			],
			[
				"plot_tr",
				"plot_training_data_2d\tfunction"
			],
			[
				"training_data",
				"training_data_model"
			],
			[
				"pl",
				"matplotlib_plot_2D\tfunction"
			],
			[
				"inte",
				"integrate\tmodule"
			],
			[
				"set_x",
				"set_xlabel"
			],
			[
				"mesh",
				"mesh_grid_num"
			],
			[
				"print",
				"print_function\tstatement"
			],
			[
				"test_density",
				"test_density_estimation_plt_2d"
			],
			[
				"den",
				"desngity_estimation_plt\tfunction"
			],
			[
				"log",
				"logger_object\t(core.py)"
			],
			[
				"data",
				"data_loader\t(test_query_engine.py)"
			],
			[
				"tru",
				"True\tinstance"
			],
			[
				"logger",
				"logger_object"
			],
			[
				"base",
				"base_models"
			],
			[
				"de",
				"density_estimation\tfunction"
			],
			[
				"Que",
				"QueryLogs"
			],
			[
				"De",
				"DEBUG\tstatement"
			],
			[
				"score",
				"score_samples\tfunction"
			],
			[
				"tesing",
				"testing_data"
			],
			[
				"split",
				"split_data_to_2\tfunction"
			],
			[
				"__",
				"__name__\t(core.py)"
			],
			[
				"trai",
				"training_data_model"
			],
			[
				"lab",
				"labels"
			],
			[
				"training_dat",
				"training_data_model"
			],
			[
				"num_",
				"num_total_training_points\tstatement"
			],
			[
				"C",
				"ClientClass"
			],
			[
				"Advance",
				"AdvancedTestSuite\t(test_advanced.py)"
			],
			[
				"flot",
				"float2str\t(Data.py)"
			],
			[
				"assertT",
				"assertTrue\tjunit method"
			],
			[
				"toS",
				"toString()\tfunc"
			],
			[
				"println",
				"println()\tfunc"
			],
			[
				"me",
				"messageUtil"
			],
			[
				"assert",
				"assertEquals\tjunit method"
			],
			[
				"Test",
				"Test\tjunit anno"
			],
			[
				"M",
				"MessageUtil\t(MessageUtil.java)"
			],
			[
				"TestU",
				"TestJunit\t(TestJunit.java)"
			],
			[
				"qin",
				"qingzhi.HelloWorld\t(build.xml)"
			],
			[
				"i-sca",
				"I-Scanner\tinit"
			],
			[
				"pub",
				"public"
			],
			[
				"test",
				"Test\tjunit anno"
			],
			[
				"H",
				"HelloWorld\t(HelloWorld.java)"
			],
			[
				"cla",
				"classes"
			],
			[
				"h",
				"HelloWorld"
			],
			[
				"sr",
				"src.dir"
			],
			[
				"buil",
				"build.dir"
			],
			[
				"bui",
				"build.dir"
			],
			[
				"pa",
				"path"
			],
			[
				"onmouseo",
				"onmouseover\tAttr"
			],
			[
				"getEl",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"getE",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"fun",
				"function"
			],
			[
				"s",
				"style"
			],
			[
				"d",
				"demo"
			],
			[
				"get",
				"getElementById"
			],
			[
				"t",
				"type\tAttr"
			],
			[
				"action",
				"action_page"
			],
			[
				"col",
				"color"
			],
			[
				"my",
				"myFunction"
			],
			[
				"co",
				"color"
			],
			[
				"back",
				"background-color"
			],
			[
				"list",
				"list-style-type"
			],
			[
				"he",
				"head2"
			],
			[
				"head",
				"head1"
			],
			[
				"font",
				"font-size"
			],
			[
				"ba",
				"background-color"
			],
			[
				"rgb",
				"rgba()"
			],
			[
				"bo",
				"border"
			],
			[
				"text",
				"text-align"
			],
			[
				"fon",
				"font-family"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "xy\nprice_cost\nprice_cost_1t\nprice_cost_1t_sample_5m\nprice_cost_1t_sorted\nprice_cost_100k\nidx_ss_list_price\nstore_sales\nstore_sales_sample_1_percent1\nstore_sales_sample_1_percent_cached\nstore_sales_sample_1m_cached",
			"settings":
			{
				"buffer_size": 213,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			}
		},
		{
			"file": "creg/generate_random.py",
			"settings":
			{
				"buffer_size": 1543,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "from __future__ import division"
			}
		},
		{
			"file": "creg/query_engine.py",
			"settings":
			{
				"buffer_size": 24905,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/evaluate2d.py",
			"settings":
			{
				"buffer_size": 43011,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/core.py",
			"settings":
			{
				"buffer_size": 117486,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "CREATE EXTERNAL TABLE store_sales_1t ( ss_sold_date_sk           INT,\nss_sold_time_sk           INT,\nss_item_sk                INT,\nss_customer_sk            INT,\nss_cdemo_sk               INT,\nss_hdemo_sk               INT,\nss_addr_sk                INT,\nss_store_sk               INT,\nss_promo_sk               INT,\nss_ticket_number          INT,\nss_quantity               INT,\nss_wholesale_cost         DECIMAL(7,2),\nss_list_price             DECIMAL(7,2),\nss_sales_price            DECIMAL(7,2),\nss_ext_discount_amt       DECIMAL(7,2),\nss_ext_sales_price        DECIMAL(7,2),\nss_ext_wholesale_cost     DECIMAL(7,2),\nss_ext_list_price         DECIMAL(7,2),\nss_ext_tax                DECIMAL(7,2),\nss_coupon_amt             DECIMAL(7,2),\nss_net_paid               DECIMAL(7,2),\nss_net_paid_inc_tax       DECIMAL(7,2),\nss_net_profit             DECIMAL(7,2)\n)\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY '|'\nLOCATION '/user/hive/warehouse/store_sales_1t.dat';\n\nLOAD DATA INPATH 'hdfs:/data/store_sales_1g.dat' INTO TABLE store_sales_1g;\nLOAD DATA INPATH 'hdfs:/data/1T.dat' INTO TABLE store_sales_1t;\n\n\n# select the x y columns\nCREATE TABLE xy AS SELECT ss_wholesale_cost,ss_list_price  FROM store_sales;\n# remove the null values\nCREATE TABLE price_cost AS SELECT ss_list_price,ss_wholesale_cost FROM xy\n    WHERE ss_list_price IS NOT NULL\n    AND ss_wholesale_cost IS NOT NULL;\n# the two sql commands above could be merged to one:\nCREATE TABLE price_cost_1t AS SELECT ss_list_price,ss_wholesale_cost FROM store_sales_1t\n    WHERE ss_list_price IS NOT NULL\n    AND ss_wholesale_cost IS NOT NULL;\n\n\n\n#hive -e 'set hive.cli.print.header=true; select * from xy' | sed 's/[\\t]/,/g'  > /home/u1796377/Desktop/xy_with_header.csv\n\n#hive -e 'select * from xy' | sed 's/[\\t]/,/g'  > /home/u1796377/Desktop/xy_without_header.csv\n\n# export the table to csv file.\nINSERT OVERWRITE LOCAL DIRECTORY '1t'\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY ','\nselect * from price_cost_1t;\n\n\n# load table to mysql\n# fisrt start the mysql server client\ncreate table price_cost_1t_sample_5m (\nss_list_price DOUBLE,\nss_wholesale_cost DOUBLE\n);\n# copy the table to the directory to be submitted to mysql\nsudo cp /disk/hadoopDir/warehouse/sample.csv /var/lib/mysql-files/sample.csv\n# load the file;\nLOAD DATA INFILE \"/var/lib/mysql-files/1t.csv\"\nINTO TABLE price_cost_1t\nCOLUMNS TERMINATED BY ','\nLINES TERMINATED BY '\\n';\n\n\n\n\n\n\nCREATE EXTERNAL TABLE store_sales_5m (\nss_list_price             DECIMAL(7,2),\nss_wholesale_cost         DECIMAL(7,2)\n)\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY '|'\nLOCATION '/user/hive/warehouse/price_cost_1t_sample_5m.dat';\n\nLOAD DATA INPATH 'hdfs:/data/store_sales_1g.dat' INTO TABLE store_sales_1g;\nLOAD DATA INPATH 'hdfs:/data/5m.csv' INTO TABLE price_cost_1t_sample_5m;\n\n\n#\n# create the sorted dataset\nCREATE TABLE price_cost_1t_sorted\nAS SELECT * FROM price_cost_1t\nORDER BY ss_list_price;\n\nsort --parallel=8 -g  -o  1t_sorted.csv 1t.csv\nsort -k 1,1 -g  -o  1t_sorted.csv 1t.csv\n\n# export the table to csv file.\nINSERT OVERWRITE LOCAL DIRECTORY '1t_sorted'\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY ','\nselect * from price_cost_1t_sorted;\n\n\n# copy the file to csv, and load the data\n# fisrt start the mysql server client\ncreate table price_cost_100k (\nss_list_price DOUBLE,\nss_wholesale_cost DOUBLE\n);\n# copy the table to the directory to be submitted to mysql\nsudo cp /disk/hadoopDir/warehouse/price_cost_1t_sorted.csv /var/lib/mysql-files/price_cost_1t_sorted.csv\n# load the file;\nLOAD DATA INFILE \"/var/lib/mysql-files/100k.csv\"\nINTO TABLE price_cost_100k\nCOLUMNS TERMINATED BY ','\nLINES TERMINATED BY '\\n';\n\n\n\n# Create the index\nCREATE INDEX idx_ss_list_price\nON price_cost_1t_sorted(ss_list_price);\n\nsed -i '1s/^/ss_list_price,ss_wholesale_cost\\n/' 100k.csv\n\n\n\n\nCREATE  TABLE store_sales ( ss_sold_date_sk           INT,\nss_sold_time_sk           INT,\nss_item_sk                INT,\nss_customer_sk            INT,\nss_cdemo_sk               INT,\nss_hdemo_sk               INT,\nss_addr_sk                INT,\nss_store_sk               INT,\nss_promo_sk               INT,\nss_ticket_number          INT,\nss_quantity               INT,\nss_wholesale_cost         DOUBLE,\nss_list_price             DOUBLE,\nss_sales_price            DOUBLE,\nss_ext_discount_amt       DOUBLE,\nss_ext_sales_price        DOUBLE,\nss_ext_wholesale_cost     DOUBLE,\nss_ext_list_price         DOUBLE,\nss_ext_tax                DOUBLE,\nss_coupon_amt             DOUBLE,\nss_net_paid               DOUBLE,\nss_net_paid_inc_tax       DOUBLE,\nss_net_profit             DOUBLE\n)\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY '|'\nLOCATION '/user/hive/warehouse/store_sales';\n\n\nLOAD DATA INPATH '/data/tcp/tcp-ds/1t/store_sales.dat' INTO TABLE store_sales;\n\nLOAD DATA INPATH 'hdfs://137.205.118.65:50075/user/hive/warehouse/store_sales_1t.dat/1T.dat' INTO TABLE store_sales_1t;\nLOAD DATA INPATH 'hdfs:/user/hive/warehouse/store_sales_1t.dat/1T.dat' INTO TABLE store_sales_1t;\n-- LOAD DATA INPATH '/user/hive/warehouse/store_sales_1t.dat/1T.dat' INTO TABLE store_sales_1t;\n-- LOAD DATA  INPATH '/disk/dataset/hadoop/store_sales.dat' INTO TABLE store_sales_1t;\n\nALTER TABLE store_sales SET LOCATION \"/data/tcp/tcp-ds/1t/store_sales.dat\";\n-- ALTER TABLE store_sales_1t SET LOCATION 'hdfs://137.205.118.65:50075/user/hive/warehouse/store_sales/1T.dat';\nALTER TABLE store_sales_1t SET LOCATION 'hdfs://guest-wl-65.dcs.warwick.ac.uk:9000/user/hive/warehouse/store_sales/1T.dat';\n\n\nCREATE TABLE store_sales_sample_1_percent1 AS SELECT * FROM store_sales SAMPLEWITH 0.01;\nCREATE TABLE store_sales_sample_1_percent_cached AS SELECT * FROM store_sales_sample_1_percent;\n\nset blinkdb.sample.size=28794695;\nset blinkdb.dataset.size=2685596178;\n\ncat 1m_1.log | grep \"^INFO - SELECT\" >1m_1.hiveql\n./bin/blinkdb -i ~/results/1m_1.hiveql > ~/results/1m_1.log\n# append ; to the end  of each line\nsed -e 's/$/;/' -i 1m_1.hiveql\n\n# fetch the results from the file\n cat 1m_1.log | grep '(99% Confidence)' > results.log\n\n\n\n\n\n#################################################################################\n#create a new sample in blinkdb, the size is 1 million.\nCREATE TABLE store_sales_sample_1m_cached AS SELECT * FROM store_sales_sample_1_percent SAMPLEWITH 0.034728619;\nset blinkdb.sample.size=999173;\nset blinkdb.dataset.size=2685596178;\n\n\n\n\n\nawk 'FNR % 7 == 4' max >> max_qreg",
			"file": "query/load_data/tcp_ds.sql",
			"file_size": 6327,
			"file_write_time": 131775168976226711,
			"settings":
			{
				"buffer_size": 6328,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"format",
				"User: Python PEP8 Autoformat"
			],
			[
				"forma",
				"User: Python PEP8 Autoformat"
			],
			[
				"doc",
				"AutoDocstring: Current"
			],
			[
				"PEP8",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"outlien",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"do",
				"AutoDocstring: Current"
			],
			[
				"au",
				"AutoPEP8: Format Code"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"auto",
				"AutoDocstring: Current"
			],
			[
				"fold",
				"Fold Python : fold content"
			],
			[
				"uni",
				"UnitTesting"
			],
			[
				"unit",
				"UnitTesting"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"bro",
				"Browse Mode: Outline (Right)"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 524.0
	},
	"console":
	{
		"height": 302.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/u1796377/Workspace/CRegressionRDBM",
		"/home/u1796377/Workspace/CRegressionRDBM/creg",
		"/home/u1796377/Workspace/CRegressionRDBM/query",
		"/home/u1796377/Workspace/CRegressionRDBM/query/load_data",
		"/home/u1796377/Workspace/CRegressionRDBM/results"
	],
	"file_history":
	[
		"/tmp/rsub-z7oskx/generate_sample.sh",
		"/tmp/rsub-9vhx2a/generate_sample.sh",
		"/home/u1796377/Desktop/1m_1_blinkdb_100k.result",
		"/tmp/rsub-1px_to/1m_1.log",
		"/tmp/rsub-e_58vh/1m_1_380.log",
		"/home/u1796377/Workspace/CRegressionRDBM/creg/queries10.hiveql",
		"/home/u1796377/Desktop/covar",
		"/home/u1796377/Desktop/variance_x",
		"/home/u1796377/Desktop/min",
		"/home/u1796377/Desktop/percentile",
		"/tmp/rsub-xmfjcx/1m_1_blinkdb_100k.result",
		"/tmp/rsub-799yov/1m_1_blinkdb_100k.result",
		"/home/u1796377/Desktop/count10.result",
		"/home/u1796377/Workspace/CRegressionRDBM/query/QReg/Text.txt",
		"/home/u1796377/Workspace/CRegressionRDBM/query/QReg/queries10.qreg",
		"/home/u1796377/Desktop/count10",
		"/home/u1796377/Desktop/count10.hiveql",
		"/home/u1796377/Workspace/CRegressionRDBM/query/mysql/percentile0.1.hiveql",
		"/tmp/rsub-qdd025/1m_1_blinkdb_100k.result",
		"/home/u1796377/Workspace/CRegressionRDBM/query/mysql/queries0.1.hiveql600",
		"/tmp/rsub-oqhx89/1m_1_blinkdb_100k.result",
		"/tmp/rsub-bu4lix/1m_1_blinkdb_100k.result",
		"/home/u1796377/Workspace/CRegressionRDBM/results/hive_10.log",
		"/tmp/rsub-gu4535/yarn-env.sh",
		"/tmp/rsub-xpj298/yarn-site.xml",
		"/home/u1796377/Workspace/CRegressionRDBM/query/hiveql/queries10.hiveql",
		"/tmp/rsub-a77nxy/hive-site.xml",
		"/tmp/rsub-ams17s/hive-site.xml",
		"/home/u1796377/Workspace/CRegressionRDBM/query/hiveql/queries0.1.hiveql",
		"/tmp/rsub-05eh4p/hive-site.xml",
		"/tmp/rsub-2k2unm/1m_1_blinkdb_100k.result",
		"/tmp/rsub-z3bi94/1m_1_blinkdb_100k.result",
		"/tmp/rsub-mvfk6d/1m_1_blinkdb_100k.result",
		"/tmp/rsub-gepzby/1m_1_blinkdb_100k.result",
		"/tmp/rsub-w6rojg/1m_1_blinkdb_100k.result",
		"/tmp/rsub-9_q5g6/1m_1_blinkdb_100k.result",
		"/tmp/rsub-ss1sdz/1m_1_blinkdb_1m_after365.log",
		"/tmp/rsub-699wj7/1m_1_blinkdb_1m.log",
		"/tmp/rsub-gvclpr/1m_1_blinkdb_100k.result",
		"/tmp/rsub-g0gqut/1m_1_blinkdb_1m.log",
		"/tmp/rsub-26i8oz/1m_1_blinkdb_10k.hiveql",
		"/tmp/rsub-rxn73u/blinkdb-env.sh",
		"/tmp/rsub-ymn_nd/1m_1_blinkdb_100k.hiveql",
		"/tmp/rsub-283mjc/1m_1_blinkdb_1m.hiveql",
		"/home/u1796377/Desktop/covar.hiveql",
		"/home/u1796377/Workspace/CRegressionRDBM/creg/queries0.1.hiveql",
		"/home/u1796377/Workspace/CRegressionRDBM/query/QReg/queries1.qreg",
		"/home/u1796377/Workspace/CRegressionRDBM/query/QReg/queries0.1.qreg",
		"/home/u1796377/Workspace/CRegressionRDBM/query/QReg/percentile1.qreg",
		"/home/u1796377/Workspace/CRegressionRDBM/query/QReg/percentile0.1.qreg",
		"/home/u1796377/Workspace/CRegressionRDBM/query/mysql/queries10.hiveql",
		"/home/u1796377/Workspace/CRegressionRDBM/query/mysql/queries0.1.hiveql",
		"/home/u1796377/Workspace/CRegressionRDBM/creg/tools.py",
		"/home/u1796377/Workspace/CRegressionRDBM/creg/percentile0.1.qreg",
		"/home/u1796377/Desktop/project2/results/blinkdb/1m_1_blinkdb_1m.result",
		"/home/u1796377/Workspace/CRegressionRDBM/query/load_data/tcp_ds.sql",
		"/home/u1796377/Workspace/CRegressionRDBM/results/100k_1_all.log",
		"/home/u1796377/Desktop/percentile.hiveql",
		"/home/u1796377/Desktop/variance_x.hiveql",
		"/home/u1796377/Desktop/min.hiveql",
		"/home/u1796377/Desktop/max.hiveql",
		"/home/u1796377/Desktop/max",
		"/home/u1796377/Desktop/count",
		"/home/u1796377/Desktop/sum.hiveql",
		"/home/u1796377/Desktop/count.hiveql",
		"/home/u1796377/Desktop/1m_1_agge.hiveql",
		"/home/u1796377/Desktop/sum",
		"/home/u1796377/Workspace/CRegressionRDBM/query/load_data/dataset8.sql",
		"/home/u1796377/Desktop/max_ground",
		"/home/u1796377/Desktop/avg.hiveql",
		"/home/u1796377/Desktop/avg",
		"/home/u1796377/Desktop/max_time",
		"/home/u1796377/Desktop/max_qreg",
		"/tmp/rsub-4lhuua/results.log",
		"/tmp/rsub-dp3pq4/results.log",
		"/tmp/rsub-32kfe_/results.log",
		"/tmp/rsub-39ct0r/1m_1_blinkdb_1m.hiveql",
		"/tmp/rsub-uewr3s/results.log.bak",
		"/tmp/rsub-hopoz7/results.log",
		"/tmp/rsub-scy8vh/results.log",
		"/tmp/rsub-dep5nl/results.log",
		"/tmp/rsub-tew2l1/results.log",
		"/tmp/rsub-tkme42/1m_1_blinkdb_1m.hiveql",
		"/tmp/rsub-cgmce6/1m_1_blinkdb_1m.hiveql",
		"/tmp/rsub-2rf4q1/results.log",
		"/tmp/rsub-o7s4fa/results.log",
		"/tmp/rsub-dhqrb0/results.log",
		"/tmp/rsub-qsr682/results.log",
		"/tmp/rsub-k9tikg/results.log",
		"/tmp/rsub-5z8t3r/results.log",
		"/tmp/rsub-i4syl7/results.log",
		"/tmp/rsub-zh3ybl/1m_1_blinkdb_1m.hiveql",
		"/tmp/rsub-n39l_1/1m_1_blinkdb_1m.hiveql",
		"/tmp/rsub-a34i68/1m_1_blinkdb_1m.hiveql",
		"/home/u1796377/Workspace/CRegressionRDBM/results/1m_1_percentile.log",
		"/home/u1796377/Desktop/1m_1_aggregates.log",
		"/home/u1796377/Desktop/percentile.log",
		"/tmp/rsub-5avcq6/1m_1_blinkdb_1m_after365.hiveql",
		"/tmp/rsub-awzt_u/1m_1_blinkdb_1m_after365.hiveql",
		"/tmp/rsub-rioikz/000000_0",
		"/home/u1796377/Workspace/CRegressionRDBM/creg/deletable.py",
		"/home/u1796377/Workspace/CRegressionRDBM/results/1m_1.log",
		"/tmp/rsub-sp8l9l/blinkdb-env.sh",
		"/home/u1796377/Workspace/CRegressionRDBM/creg/percentile.hiveql",
		"/home/u1796377/Program/blinkdb/conf/blinkdb-env.sh",
		"/tmp/rsub-lgwo9c/blinkdb-env.sh",
		"/opt/spark/spark1/conf/spark-env.sh",
		"/home/u1796377/Desktop/project2/results/blinkdb/1m_1.result",
		"/home/u1796377/Desktop/project2/results/blinkdb/1m_1.log",
		"/home/u1796377/Desktop/1m_1_380.log",
		"/home/u1796377/Desktop/1m_1.log",
		"/home/u1796377/Desktop/1m_1_380.result",
		"/home/u1796377/Desktop/1m_1.result",
		"/media/u1796377/sceavens Baby/2018-07-dcs-desktop/Desktop/project2/results/blinkdb/results.log",
		"/media/u1796377/sceavens Baby/2018-07-dcs-desktop/Desktop/project2/results/blinkdb/1m_1.log",
		"/home/u1796377/Desktop/result1m_1.log",
		"/home/u1796377/Desktop/project2/results/blinkdb/1m_1_blinkdb_1m.log",
		"/home/u1796377/Desktop/1m_1_blinkdb_1m_after365.log",
		"/home/u1796377/Desktop/result1m_2.log",
		"/home/u1796377/Desktop/project2/results/blinkdb/blinkdb_1m.result",
		"/home/u1796377/Desktop/project2/results/blinkdb/results.log",
		"/home/u1796377/Desktop/1m_1_blinkdb_1m.log",
		"/tmp/rsub-zbpabx/1m_1_blinkdb_1m_after365.log",
		"/tmp/rsub-z262so/1m_1_blinkdb_1m_after365.log",
		"/tmp/rsub-6qj44r/1m_1_blinkdb_1m_after365.log",
		"/tmp/rsub-iz5t4r/1m_1_blinkdb_1m_after365.log",
		"/tmp/rsub-ej68r6/1m_1_blinkdb_1m_after365.log",
		"/tmp/rsub-73thu7/1m_1_blinkdb_1m_after365.log"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"confi",
			"% Confiden",
			"confi",
			"INFO - ",
			",)",
			"price_cost_1t_sorted",
			"Confi",
			"confi",
			"Confidence",
			"confidence",
			"store_sales_sample_1m_cached",
			"variance_training_points_model",
			"num_training_points_model",
			"AND",
			"INFO - SELECT COVARIANCE(ss_list_price, ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT VARIANCE(ss_list_price) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT MIN(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT MAX(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN ",
			"AND",
			"INFO - SELECT SUM(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN ",
			"AND",
			"INFO - SELECT COUNT(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			",",
			"INFO - SELECT AVG(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT AVG(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			",)",
			"INFO - ",
			"price_cost_1t_sorted",
			"store_sales_sample_1m_cached",
			"merge",
			"head",
			")",
			" FROM price_cost_1t_sorted",
			"INFO - SELECT percentile_cont(ss_list_price, ",
			"confi",
			"store_sales_sample_1_percent_cached",
			"137.205.118.65",
			"Time to fit the model is",
			"\t",
			"jdk1.8.0_171",
			"jdk-10.0.1",
			"jdk-10.0.1_linux-x64_bin",
			"jdk1.8.0"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"price_cost_1t",
			"pc_10k_cached",
			"pc_100k_cached",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			"whole_1m_cached",
			"",
			"store_sales_sample_1m_cached",
			"137.205.115.59",
			"    ",
			"jdk1.7.0_80",
			"jdk1.8.0_171",
			"jdk-10.0.1",
			"jdk-10.0.1_linux-x64_bin"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 213,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/u1796377/Workspace/CRegressionRDBM/query/load_data/tcp_ds.sql",
							"git_gutter_is_enabled": false,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1140,
									1142
								],
								[
									1242,
									1252
								],
								[
									1444,
									1457
								],
								[
									2039,
									2062
								],
								[
									2820,
									2840
								],
								[
									3240,
									3255
								],
								[
									3652,
									3669
								],
								[
									3787,
									3798
								],
								[
									5454,
									5483
								],
								[
									5543,
									5578
								],
								[
									6121,
									6149
								]
							],
							"symlist":
							[
								"xy",
								"price_cost",
								"price_cost_1t",
								"price_cost_1t_sample_5m",
								"price_cost_1t_sorted",
								"price_cost_100k",
								"idx_ss_list_price",
								"store_sales",
								"store_sales_sample_1_percent1",
								"store_sales_sample_1_percent_cached",
								"store_sales_sample_1m_cached"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "creg/generate_random.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1543,
						"regions":
						{
						},
						"selection":
						[
							[
								755,
								755
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"auto_name": "from __future__ import division",
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 71.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "creg/query_engine.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24905,
						"regions":
						{
						},
						"selection":
						[
							[
								21430,
								21430
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9711.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "creg/evaluate2d.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43011,
						"regions":
						{
						},
						"selection":
						[
							[
								40482,
								40482
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17154.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "creg/core.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 117486,
						"regions":
						{
						},
						"selection":
						[
							[
								111278,
								111278
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 50435.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "query/load_data/tcp_ds.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6328,
						"regions":
						{
						},
						"selection":
						[
							[
								5694,
								5694
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/SQL/SQL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2850.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.762829287118,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 234.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/python3_qz.sublime-build",
	"project": "CRegressionRDBM.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"tests/test_basic.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 321.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
