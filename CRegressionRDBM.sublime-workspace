{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mass",
				"mass_query2mysql\tfunction"
			],
			[
				"file",
				"file_name_hiveql\tstatement"
			],
			[
				"qre",
				"qregStr\tstatement"
			],
			[
				"gene",
				"generate_queries"
			],
			[
				"query_2d_co",
				"query_2d_covariance\tfunction"
			],
			[
				"var",
				"variance_x"
			],
			[
				"resu",
				"result"
			],
			[
				"in",
				"info"
			],
			[
				"mass_query_co",
				"mass_query_covariance\tfunction"
			],
			[
				"prop",
				"proportion_to_show"
			],
			[
				"data_pro",
				"data_proportions_to_plot"
			],
			[
				"data_pr",
				"data_proportion_to_plot"
			],
			[
				"Da",
				"DataSource\tclass"
			],
			[
				"datas",
				"data_source\t(tools.py)"
			],
			[
				"min",
				"min_xvalue"
			],
			[
				"mat",
				"matplotlib_plot_2D_confidence_interval\tfunction"
			],
			[
				"num_of",
				"num_of_plot"
			],
			[
				"tree",
				"app_decision_tree"
			],
			[
				"app",
				"app_linear"
			],
			[
				"da",
				"data"
			],
			[
				"num",
				"num_training_points_model\tstatement"
			],
			[
				"varian",
				"variance_training_points_model\tstatement"
			],
			[
				"vai",
				"variance_training_points_model\tstatement"
			],
			[
				"ave",
				"averageX_training_points_model\tstatement"
			],
			[
				"training",
				"training_data_model"
			],
			[
				"dimen",
				"dimensionX\tstatement"
			],
			[
				"avera",
				"averageX_training_points_model"
			],
			[
				"query",
				"query2mysql\tfunction"
			],
			[
				"hive",
				"hivepassword"
			],
			[
				"dele",
				"deletable.log\t(logs.py)"
			],
			[
				"logg",
				"logger_file"
			],
			[
				"war",
				"warning\t(core.py)"
			],
			[
				"approximate_vari",
				"approximate_variance_y_from_to\tfunction"
			],
			[
				"x",
				"x_min"
			],
			[
				"ex",
				"exact_result\tstatement"
			],
			[
				"time",
				"time_ratio\tfunction"
			],
			[
				"approx",
				"approx_times"
			],
			[
				"appro",
				"approx_results"
			],
			[
				"exa",
				"exact_times"
			],
			[
				"approx_time",
				"approx_times"
			],
			[
				"exac",
				"exact_times"
			],
			[
				"date",
				"datetime"
			],
			[
				"lo",
				"logger\tstatement"
			],
			[
				"try",
				"try\tTry/Except/Finally"
			],
			[
				"rand",
				"randrange\tstatement"
			],
			[
				"Q",
				"Query_Engine_2d"
			],
			[
				"2d",
				"2d_query_engine"
			],
			[
				"allow",
				"b_allow_repeated_value"
			],
			[
				"re",
				"remove_repeated_x_1d\tfunction"
			],
			[
				"to",
				"to_csv\tfunction"
			],
			[
				"l",
				"labels\tstatement"
			],
			[
				"loa",
				"load2d"
			],
			[
				"defa",
				"default_logger_name"
			],
			[
				"qu",
				"query_2d"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"nu",
				"num_training_points\tstatement"
			],
			[
				"set",
				"set_logging\tfunction"
			],
			[
				"plot",
				"plot_training_data_3d\tfunction"
			],
			[
				"training_da",
				"training_data"
			],
			[
				"plot_tr",
				"plot_training_data_2d\tfunction"
			],
			[
				"training_data",
				"training_data_model"
			],
			[
				"pl",
				"matplotlib_plot_2D\tfunction"
			],
			[
				"inte",
				"integrate\tmodule"
			],
			[
				"set_x",
				"set_xlabel"
			],
			[
				"mesh",
				"mesh_grid_num"
			],
			[
				"print",
				"print_function\tstatement"
			],
			[
				"test_density",
				"test_density_estimation_plt_2d"
			],
			[
				"den",
				"desngity_estimation_plt\tfunction"
			],
			[
				"log",
				"logger_object\t(core.py)"
			],
			[
				"data",
				"data_loader\t(test_query_engine.py)"
			],
			[
				"tru",
				"True\tinstance"
			],
			[
				"logger",
				"logger_object"
			],
			[
				"base",
				"base_models"
			],
			[
				"de",
				"density_estimation\tfunction"
			],
			[
				"Que",
				"QueryLogs"
			],
			[
				"De",
				"DEBUG\tstatement"
			],
			[
				"score",
				"score_samples\tfunction"
			],
			[
				"tesing",
				"testing_data"
			],
			[
				"split",
				"split_data_to_2\tfunction"
			],
			[
				"__",
				"__name__\t(core.py)"
			],
			[
				"trai",
				"training_data_model"
			],
			[
				"lab",
				"labels"
			],
			[
				"training_dat",
				"training_data_model"
			],
			[
				"num_",
				"num_total_training_points\tstatement"
			],
			[
				"C",
				"ClientClass"
			],
			[
				"Advance",
				"AdvancedTestSuite\t(test_advanced.py)"
			],
			[
				"flot",
				"float2str\t(Data.py)"
			],
			[
				"assertT",
				"assertTrue\tjunit method"
			],
			[
				"toS",
				"toString()\tfunc"
			],
			[
				"println",
				"println()\tfunc"
			],
			[
				"me",
				"messageUtil"
			],
			[
				"assert",
				"assertEquals\tjunit method"
			],
			[
				"Test",
				"Test\tjunit anno"
			],
			[
				"M",
				"MessageUtil\t(MessageUtil.java)"
			],
			[
				"TestU",
				"TestJunit\t(TestJunit.java)"
			],
			[
				"qin",
				"qingzhi.HelloWorld\t(build.xml)"
			],
			[
				"i-sca",
				"I-Scanner\tinit"
			],
			[
				"pub",
				"public"
			],
			[
				"test",
				"Test\tjunit anno"
			],
			[
				"H",
				"HelloWorld\t(HelloWorld.java)"
			],
			[
				"cla",
				"classes"
			],
			[
				"h",
				"HelloWorld"
			],
			[
				"sr",
				"src.dir"
			],
			[
				"buil",
				"build.dir"
			],
			[
				"bui",
				"build.dir"
			],
			[
				"pa",
				"path"
			],
			[
				"onmouseo",
				"onmouseover\tAttr"
			],
			[
				"getEl",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"getE",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"fun",
				"function"
			],
			[
				"s",
				"style"
			],
			[
				"d",
				"demo"
			],
			[
				"get",
				"getElementById"
			],
			[
				"t",
				"type\tAttr"
			],
			[
				"action",
				"action_page"
			],
			[
				"col",
				"color"
			],
			[
				"my",
				"myFunction"
			],
			[
				"co",
				"color"
			],
			[
				"back",
				"background-color"
			],
			[
				"list",
				"list-style-type"
			],
			[
				"he",
				"head2"
			],
			[
				"head",
				"head1"
			],
			[
				"font",
				"font-size"
			],
			[
				"ba",
				"background-color"
			],
			[
				"rgb",
				"rgba()"
			],
			[
				"bo",
				"border"
			],
			[
				"text",
				"text-align"
			],
			[
				"fon",
				"font-family"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			}
		},
		{
			"file": "creg/generate_random.py",
			"settings":
			{
				"buffer_size": 1543,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "from __future__ import division"
			}
		},
		{
			"file": "creg/query_engine.py",
			"settings":
			{
				"buffer_size": 24905,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/evaluate2d.py",
			"settings":
			{
				"buffer_size": 43097,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/core.py",
			"settings":
			{
				"buffer_size": 117486,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "query/load_data/tcp_ds.sql",
			"settings":
			{
				"buffer_size": 6328,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# HIVE\nCREATE EXTERNAL TABLE  IF NOT EXISTS ETrade( T_ID           INT,\nT_DTS           CHAR(23),\nT_ST_ID         CHAR(4),\nT_TT_ID         CHAR(3),\nT_IS_CASH       INT,\nT_S_SYMB        CHAR(15),\nT_QTY           INT,\nT_BID_PRICE     DECIMAL(7,2),\nT_CA_ID         INT,\nT_EXEC_NAME     CHAR(49),\nT_TRADE_PRICE   DECIMAL(7,2),\nT_CHRG          DECIMAL(7,2),\nT_COMM          DECIMAL(7,2),\nT_TAX           DECIMAL(7,2),\nT_LIFO          INT\n)\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY '|'\nLOCATION '/user/hive/warehouse/tpce';\n\n\n\nCREATE TABLE etrade_price_comm AS SELECT T_TRADE_PRICE,T_COMM FROM ETrade\n    WHERE T_TRADE_PRICE IS NOT NULL\n    AND T_COMM IS NOT NULL;\n\n\nCREATE TABLE etrade_price_charge AS SELECT T_TRADE_PRICE,T_CHRG FROM ETrade\n    WHERE T_TRADE_PRICE IS NOT NULL\n    AND T_CHRG IS NOT NULL;\n\n\n# export the table to csv file.\nINSERT OVERWRITE LOCAL DIRECTORY 'etrade_price_comm'\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY ','\nselect * from etrade_price_comm;\n\n# export the table to csv file.\nINSERT OVERWRITE LOCAL DIRECTORY 'etrade_price_charge'\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY ','\nselect * from etrade_price_charge;\n\n\n# merge splits into one csv file\ncat 000* > etrade_price_comm.csv\ncat 000* > etrade_price_charge.csv\n\n# create sample here\n\n\n# sort\nsort -k 1,1 -g  -o  etrade_price_comm_sorted.csv etrade_price_comm.csv\nsort -k 1,1 -g  -o  etrade_price_charge_sorted.csv etrade_price_charge.csv\n\n\n\n## in mysql, create the corresponding full tables\n\ncreate table etrade_price_comm (\nT_TRADE_PRICE DOUBLE,\nT_COMM DOUBLE\n);\n\ncreate table etrade_price_charge (\nT_TRADE_PRICE DOUBLE,\nT_CHRG DOUBLE\n);\n\n# copy the table to the directory to be submitted to mysql\nsudo mv /home/hduser/etrade_price_comm/etrade_price_comm_sorted.csv /var/lib/mysql-files/etrade_price_comm_sorted.csv\nsudo mv /home/hduser/etrade_price_charge/etrade_price_charge_sorted.csv /var/lib/mysql-files/etrade_price_charge_sorted.csv\n# load the file;\nLOAD DATA INFILE \"/var/lib/mysql-files/etrade_price_comm_sorted.csv\"\nINTO TABLE etrade_price_comm\nCOLUMNS TERMINATED BY ','\nLINES TERMINATED BY '\\n';\n\nLOAD DATA INFILE \"/var/lib/mysql-files/etrade_price_charge_sorted.csv\"\nINTO TABLE etrade_price_charge\nCOLUMNS TERMINATED BY ','\nLINES TERMINATED BY '\\n';\n\n# Create the index\nCREATE INDEX idx_T_TRADE_PRICE\nON etrade_price_comm(T_TRADE_PRICE);\n\nCREATE INDEX idx_T_TRADE_PRICE\nON etrade_price_charge(T_TRADE_PRICE);\n\n\n# insert headers to the csv file\nsed -i '1s/^/T_TRADE_PRICE,T_COMM\\n/' etrade_price_comm_1m_sorted.csv\nsed -i '1s/^/T_TRADE_PRICE,T_CHRG\\n/' etrade_price_charge_1m.csv\n\n\n\n2160000000",
			"file": "query/load_data/tpc_e.sql",
			"file_size": 2584,
			"file_write_time": 131816494989688508,
			"settings":
			{
				"buffer_size": 2584,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/data_loader.py",
			"settings":
			{
				"buffer_size": 31737,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/tools.py",
			"settings":
			{
				"buffer_size": 34640,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/u1796377/Desktop/tpc_ds.sql",
			"settings":
			{
				"buffer_size": 10093,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "tpc_ds"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 383,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"format",
				"User: Python PEP8 Autoformat"
			],
			[
				"forma",
				"User: Python PEP8 Autoformat"
			],
			[
				"doc",
				"AutoDocstring: Current"
			],
			[
				"PEP8",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"outlien",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"do",
				"AutoDocstring: Current"
			],
			[
				"au",
				"AutoPEP8: Format Code"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"auto",
				"AutoDocstring: Current"
			],
			[
				"fold",
				"Fold Python : fold content"
			],
			[
				"uni",
				"UnitTesting"
			],
			[
				"unit",
				"UnitTesting"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"bro",
				"Browse Mode: Outline (Right)"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 524.0
	},
	"console":
	{
		"height": 302.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/u1796377/Workspace/CRegressionRDBM",
		"/home/u1796377/Workspace/CRegressionRDBM/creg",
		"/home/u1796377/Workspace/CRegressionRDBM/data",
		"/home/u1796377/Workspace/CRegressionRDBM/query"
	],
	"file_history":
	[
		"/home/u1796377/Workspace/CRegressionRDBM/.gitignore",
		"/home/u1796377/Workspace/CRegressionRDBM/requirements.txt",
		"/tmp/rsub-6cqftx/00-header",
		"/tmp/rsub-vmmarh/query9.tpl",
		"/tmp/rsub-i291ii/10periodic",
		"/tmp/rsub-rhp284/query85.tpl",
		"/tmp/rsub-johnku/query79.tpl",
		"/tmp/rsub-c05it1/query48.tpl",
		"/tmp/rsub-dx9z6d/query9.tpl",
		"/tmp/rsub-xi7g9q/query28.tpl",
		"/tmp/rsub-s0oeig/query100.tpl",
		"/tmp/rsub-uboxr9/query99.tpl",
		"/tmp/rsub-szyx95/query98.tpl",
		"/tmp/rsub-7fs34m/query97.tpl",
		"/tmp/rsub-vv04co/query96.tpl",
		"/tmp/rsub-8o4oos/query95.tpl",
		"/tmp/rsub-76w309/query94.tpl",
		"/tmp/rsub-ck20gt/query93.tpl",
		"/tmp/rsub-b4aguc/query92.tpl",
		"/tmp/rsub-8udv60/query87.tpl",
		"/tmp/rsub-ysd4mx/query91.tpl",
		"/tmp/rsub-z11ouq/query90.tpl",
		"/tmp/rsub-4s9d0s/query89.tpl",
		"/tmp/rsub-h23ooj/query88.tpl",
		"/tmp/rsub-j25w48/query86.tpl",
		"/tmp/rsub-ebw186/query85.tpl",
		"/tmp/rsub-fuadth/query84.tpl",
		"/tmp/rsub-dnru78/query83.tpl",
		"/tmp/rsub-3gd_5b/query82.tpl",
		"/tmp/rsub-ni7esp/query81.tpl",
		"/tmp/rsub-emq296/query80.tpl",
		"/tmp/rsub-xutsf2/query79.tpl",
		"/tmp/rsub-n3nohz/query78.tpl",
		"/tmp/rsub-f6rrvu/query77.tpl",
		"/tmp/rsub-69_mx1/query76.tpl",
		"/tmp/rsub-9c9ijx/query75.tpl",
		"/tmp/rsub-3um489/query74.tpl",
		"/tmp/rsub-q4g0l3/query73.tpl",
		"/tmp/rsub-y6f1v_/query72.tpl",
		"/tmp/rsub-8g8ghi/query71.tpl",
		"/tmp/rsub-1aej1m/query70.tpl",
		"/tmp/rsub-yn_sz4/query69.tpl",
		"/tmp/rsub-cggg2c/query68.tpl",
		"/tmp/rsub-lsoadc/query67.tpl",
		"/tmp/rsub-zhzfqv/query66.tpl",
		"/tmp/rsub-tg1smw/query65.tpl",
		"/tmp/rsub-8l_z9f/query64.tpl",
		"/tmp/rsub-gnylwr/query63.tpl",
		"/tmp/rsub-oi2060/query62.tpl",
		"/tmp/rsub-9_0yaz/query61.tpl",
		"/tmp/rsub-saelry/query60.tpl",
		"/tmp/rsub-6_bbij/query59.tpl",
		"/tmp/rsub-gzkk7t/query58.tpl",
		"/tmp/rsub-16zpkp/query57.tpl",
		"/tmp/rsub-rfgn0f/query56.tpl",
		"/tmp/rsub-9nrc44/query55.tpl",
		"/tmp/rsub-8rbf0o/query54.tpl",
		"/tmp/rsub-tlw0nv/query53.tpl",
		"/tmp/rsub-2q508k/query52.tpl",
		"/tmp/rsub-uecudu/query51.tpl",
		"/tmp/rsub-p06wu7/query50.tpl",
		"/tmp/rsub-chiumm/query49.tpl",
		"/tmp/rsub-kaqna8/query48.tpl",
		"/tmp/rsub-kliqxk/query47.tpl",
		"/tmp/rsub-hqnnsu/query47.tpl",
		"/tmp/rsub-901p0s/query46.tpl",
		"/tmp/rsub-33g9mf/query43.tpl",
		"/tmp/rsub-zlur2z/query45.tpl",
		"/tmp/rsub-2fmy70/query44.tpl",
		"/tmp/rsub-l5e13g/query44.tpl",
		"/tmp/rsub-8reb80/query42.tpl",
		"/tmp/rsub-e2ya5r/query41.tpl",
		"/tmp/rsub-m_pelp/query40.tpl",
		"/tmp/rsub-u07db3/query39.tpl",
		"/tmp/rsub-64zb29/query38.tpl",
		"/tmp/rsub-i_0tek/query37.tpl",
		"/tmp/rsub-n0jv8r/query36.tpl",
		"/tmp/rsub-rtcaa8/query35.tpl",
		"/tmp/rsub-ffep0x/query34.tpl",
		"/tmp/rsub-chr_3j/query33.tpl",
		"/tmp/rsub-aso6z0/query32.tpl",
		"/tmp/rsub-rggtcc/query31.tpl",
		"/tmp/rsub-v6dfee/query30.tpl",
		"/tmp/rsub-8o3vy9/query27.tpl",
		"/tmp/rsub-2ehdtl/query29.tpl",
		"/tmp/rsub-4ijdqw/query28.tpl",
		"/tmp/rsub-ru41yg/query27.tpl",
		"/tmp/rsub-4um8zv/query9.tpl",
		"/tmp/rsub-oxgwz5/query26.tpl",
		"/tmp/rsub-1cm8ct/query25.tpl",
		"/tmp/rsub-r91aq5/query24.tpl",
		"/tmp/rsub-t32vaf/query23.tpl",
		"/tmp/rsub-rcdeee/query22.tpl",
		"/tmp/rsub-d22vwd/query21.tpl",
		"/tmp/rsub-l_phef/query20.tpl",
		"/tmp/rsub-6gj_uo/query19.tpl",
		"/tmp/rsub-qqlu_y/query18.tpl",
		"/tmp/rsub-8w1xrx/query17.tpl",
		"/tmp/rsub-a046f8/query16.tpl",
		"/tmp/rsub-295vbp/query15.tpl",
		"/tmp/rsub-0bads8/query14.tpl",
		"/tmp/rsub-6zqe9k/query13.tpl",
		"/tmp/rsub-yqbkn7/query12.tpl",
		"/tmp/rsub-__09d2/query11.tpl",
		"/tmp/rsub-ph7of2/query10.tpl",
		"/tmp/rsub-t73qpy/query9.tpl",
		"/tmp/rsub-4_o_02/query8.tpl",
		"/tmp/rsub-xqvys_/query7.tpl",
		"/tmp/rsub-oj_i6o/query6.tpl",
		"/tmp/rsub-48ie3x/query5.tpl",
		"/tmp/rsub-214bq6/query4.tpl",
		"/tmp/rsub-8cwdcj/query1.tpl",
		"/tmp/rsub-7ahnfw/query3.tpl",
		"/tmp/rsub-lbt_nu/query2.tpl",
		"/tmp/rsub-1w_99y/query1.tpl",
		"/tmp/rsub-1bye4d/netezza.tpl",
		"/tmp/rsub-pc0ba4/db2.tpl",
		"/tmp/rsub-qmbg0_/ansi.tpl",
		"/tmp/rsub-o18ckr/ansi.tpl",
		"/tmp/rsub-5i57dj/query1.tpl",
		"/tmp/rsub-t_hky9/query10a.tpl",
		"/home/u1796377/Desktop/max.hiveql",
		"/tmp/rsub-3jq_ss/generate_sample.sh",
		"/tmp/rsub-xyicz9/generate_sample.sh",
		"/tmp/rsub-1jdqnp/generate_sample.sh",
		"/home/u1796377/Workspace/CRegressionRDBM/data/etrade_price_comm_1m_sorted.csv",
		"/home/u1796377/Workspace/CRegressionRDBM/data/etrade_price_comm_10k.csv",
		"/home/u1796377/Workspace/CRegressionRDBM/results/etrade_hive_percentile.log"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"count",
			"percentile_cont",
			"\t",
			"merge",
			"head",
			"header",
			"CXX",
			"RM",
			"prefix",
			"confi",
			"confid",
			"confi",
			"confid",
			"confiden",
			"confid",
			"confide",
			"confid",
			"pc_1m_cached",
			"price_cost_1t_sorted",
			"AVG",
			"SUM",
			"COUNT",
			"price_cost_1t_sorted",
			"AVG",
			"SUM",
			"COUNT",
			"pc_10k_cached",
			"VARIANCE(ss_wholesale_cost)",
			"confi",
			"-",
			"pc_100k_cached",
			"AVG",
			"SUM",
			"COUNT",
			"price_cost_1t",
			"pc_10k_cached",
			"price_cost_1t",
			"percentile_cont",
			"confi",
			"% Confiden",
			"confi",
			"INFO - ",
			",)",
			"price_cost_1t_sorted",
			"Confi",
			"confi",
			"Confidence",
			"confidence",
			"store_sales_sample_1m_cached",
			"variance_training_points_model",
			"num_training_points_model",
			"AND",
			"INFO - SELECT COVARIANCE(ss_list_price, ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT VARIANCE(ss_list_price) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT MIN(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT MAX(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN ",
			"AND",
			"INFO - SELECT SUM(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN ",
			"AND",
			"INFO - SELECT COUNT(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			",",
			"INFO - SELECT AVG(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			"AND",
			"INFO - SELECT AVG(ss_wholesale_cost) FROM price_cost_1t_sorted WHERE  ss_list_price BETWEEN",
			",)",
			"INFO - ",
			"price_cost_1t_sorted",
			"store_sales_sample_1m_cached",
			"merge",
			"head",
			")",
			" FROM price_cost_1t_sorted",
			"INFO - SELECT percentile_cont(ss_list_price, ",
			"confi",
			"store_sales_sample_1_percent_cached",
			"137.205.118.65",
			"Time to fit the model is",
			"\t",
			"jdk1.8.0_171",
			"jdk-10.0.1",
			"jdk-10.0.1_linux-x64_bin",
			"jdk1.8.0"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"avg",
			"percentile_approx",
			"    ",
			"pc_10k_cached",
			"pc_100k_cached",
			"pc_1k_cached",
			"pc_10k_cached",
			"pc_1k_cached",
			"pc_1m_cached",
			"APPROX_AVG",
			"APPROX_SUM",
			"APPROX_COUNT",
			"pc_1m_cached",
			"APPROX_AVG",
			"APPROX_SUM",
			"APPROX_COUNT",
			"pc_1k_cached",
			"VARIANCE(ss_list_price)",
			"pc_1m_cached",
			"pc_10k_cached",
			"APPROX_AVG",
			"APPROX_SUM",
			"APPROX_COUNT",
			"pc_10k_cached",
			"pc_100k_cached",
			"pc_1m_cached",
			"pc_100k_cached",
			"pc_10k_cached",
			"percentile_approx",
			"",
			"price_cost_1t",
			"pc_10k_cached",
			"pc_100k_cached",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			"whole_1m_cached",
			"",
			"store_sales_sample_1m_cached",
			"137.205.115.59",
			"    ",
			"jdk1.7.0_80",
			"jdk1.8.0_171",
			"jdk-10.0.1",
			"jdk-10.0.1_linux-x64_bin"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/u1796377/Workspace/CRegressionRDBM/.gitignore",
							"git_gutter_is_enabled": false,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		},
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "creg/generate_random.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1543,
						"regions":
						{
						},
						"selection":
						[
							[
								755,
								755
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"auto_name": "from __future__ import division",
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 77.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "creg/query_engine.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24905,
						"regions":
						{
						},
						"selection":
						[
							[
								22603,
								22603
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9709.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "creg/evaluate2d.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43097,
						"regions":
						{
						},
						"selection":
						[
							[
								40483,
								40483
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16425.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "creg/core.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 117486,
						"regions":
						{
						},
						"selection":
						[
							[
								3272,
								3272
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1311.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "query/load_data/tcp_ds.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6328,
						"regions":
						{
						},
						"selection":
						[
							[
								3620,
								3620
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/SQL/SQL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1777.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "query/load_data/tpc_e.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2584,
						"regions":
						{
						},
						"selection":
						[
							[
								2034,
								2034
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/SQL/SQL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1292.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "creg/data_loader.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31737,
						"regions":
						{
						},
						"selection":
						[
							[
								7890,
								7890
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2736.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "creg/tools.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34640,
						"regions":
						{
						},
						"selection":
						[
							[
								34640,
								34640
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17596.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/u1796377/Desktop/tpc_ds.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10093,
						"regions":
						{
						},
						"selection":
						[
							[
								9267,
								9267
							]
						],
						"settings":
						{
							"auto_name": "tpc_ds",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/SQL/SQL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1824.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 383,
						"regions":
						{
						},
						"selection":
						[
							[
								266,
								266
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.762829287118,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 234.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/python3_qz.sublime-build",
	"project": "CRegressionRDBM.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"tests/test_basic.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 321.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
